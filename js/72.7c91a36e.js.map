{"version":3,"file":"js/72.7c91a36e.js","mappings":"iKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,OAAO,CAACA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,QAAQ,CAACG,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOR,EAAIS,IAAKC,WAAW,QAAQC,MAAM,CAAC,KAAO,OAAO,YAAc,SAASC,SAAS,CAAC,MAASZ,EAAIS,KAAMI,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,YAAiBhB,EAAIS,IAAIK,EAAOC,OAAOP,MAAK,SAASN,EAAG,MAAM,CAACE,YAAY,WAAWJ,EAAIiB,GAAIjB,EAAIkB,eAAe,SAASC,GAAQ,OAAOjB,EAAG,cAAc,CAACkB,IAAID,EAAOE,GAAGV,MAAM,CAAC,GAAM,aAAYQ,EAAOE,OAAO,CAACnB,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,KAAK,CAACF,EAAIsB,GAAGtB,EAAIuB,GAAGJ,EAAOK,UAAUtB,EAAG,OAAO,CAACF,EAAIsB,GAAGtB,EAAIuB,GAAGJ,EAAOM,eAAevB,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,IAAI,CAACF,EAAIsB,GAAGtB,EAAIuB,GAAGJ,EAAOO,qBAAqB,IAAG,GAAGxB,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,QAAQ,CAACG,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOR,EAAIwB,MAAOd,WAAW,UAAUC,MAAM,CAAC,KAAO,OAAO,YAAc,YAAYC,SAAS,CAAC,MAASZ,EAAIwB,OAAQX,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,YAAiBhB,EAAIwB,MAAMV,EAAOC,OAAOP,MAAK,OAAON,EAAG,SAAS,CAACW,GAAG,CAAC,MAAQZ,KAAK0B,YAAY,CAAC3B,EAAIsB,GAAG,mCACrvC,EACIM,EAAkB,GCgDtB,GACAC,MAAAA,CAAAA,EAEAC,OACA,OACAC,QAAAA,KAAAA,YACAP,MAAAA,GACAf,IAAAA,GAEA,EAEAuB,SAAAA,CACAd,gBACA,+BACA,4BAEA,GAGAe,MAAAA,CAAAA,EAEAC,UACA,EAEAC,UACA,EAEAC,QAAAA,CACAT,YACA,eACA,yBACAH,MAAAA,KAAAA,MACAC,SAAAA,GAAAA,EAAAA,cAAAA,EAAAA,eACAC,YAAAA,gBACAL,GAAAA,KAAAA,QAEA,cACA,iBACA,EACAgB,aACAC,aAAAA,QAAAA,SAAAA,KAAAA,UAAAA,KAAAA,SACA,EACAC,YACA,iDACA,qBACA,IC/F2P,I,UCQvPC,GAAY,OACd,EACAzC,EACA6B,GACA,EACA,KACA,WACA,MAIF,EAAeY,EAAiB,O","sources":["webpack://extra-notes/./src/views/DialogsView.vue","webpack://extra-notes/src/views/DialogsView.vue","webpack://extra-notes/./src/views/DialogsView.vue?c262","webpack://extra-notes/./src/views/DialogsView.vue?eb97"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('main',[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"search\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inp),expression:\"inp\"}],attrs:{\"type\":\"text\",\"placeholder\":\"Поиск\"},domProps:{\"value\":(_vm.inp)},on:{\"input\":function($event){if($event.target.composing)return;_vm.inp=$event.target.value}}})])]),_c('div',{staticClass:\"dialogs\"},_vm._l((_vm.sortedDialogs),function(dialog){return _c('router-link',{key:dialog.id,attrs:{\"to\":`/messages/${dialog.id}`}},[_c('div',{staticClass:\"dialog\"},[_c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(_vm._s(dialog.title))]),_c('time',[_vm._v(_vm._s(dialog.dataTime))])]),_c('div',{staticClass:\"last-message\"},[_c('p',[_vm._v(_vm._s(dialog.lastMessage))])])])])}),1),_c('div',{staticClass:\"footer\"},[_c('div',{staticClass:\"form\"},[_c('div',{staticClass:\"new-dialog\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.title),expression:\"title\"}],attrs:{\"type\":\"text\",\"placeholder\":\"Название\"},domProps:{\"value\":(_vm.title)},on:{\"input\":function($event){if($event.target.composing)return;_vm.title=$event.target.value}}})]),_c('button',{on:{\"click\":this.addDialog}},[_vm._v(\" Добавить новый дилог \")])])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <main>\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <div class=\"search\">\r\n          <input\r\n              type=\"text\"\r\n              placeholder=\"Поиск\" \r\n              v-model=\"inp\"\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"dialogs\">\r\n        <router-link \r\n              v-for=\"dialog in sortedDialogs\" \r\n              :key=\"dialog.id\"\r\n              :to=\"`/messages/${dialog.id}`\">\r\n          <div class=\"dialog\">\r\n            <div class=\"title\">\r\n              <h3>{{ dialog.title }}</h3> \r\n              <time>{{ dialog.dataTime }}</time>\r\n            </div>\r\n            <div class=\"last-message\">\r\n              <p>{{ dialog.lastMessage }}</p>\r\n            </div>\r\n          </div>\r\n        </router-link>\r\n      </div>\r\n\r\n      <div class=\"footer\">\r\n        <div class=\"form\">\r\n          <div class=\"new-dialog\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Название\"\r\n                v-model=\"title\"\r\n            >\r\n          </div>\r\n          <button @click=\"this.addDialog\">\r\n            Добавить новый дилог\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  props: {},\r\n\r\n  data() {\r\n    return {\r\n      dialogs: this.getDialog(), \r\n      title: '', \r\n      inp: '' \r\n    };\r\n  },\r\n\r\n  computed: {\r\n    sortedDialogs() { \r\n      return this.dialogs.filter(el => {\r\n        return el.title.includes(this.inp)  \r\n      }) \r\n    } \r\n  },\r\n\r\n  watch: {},\r\n\r\n  created() {\r\n  },\r\n\r\n  mounted() {\r\n  },\r\n\r\n  methods: {\r\n    addDialog() {\r\n      let date = new Date; \r\n      this.dialogs.splice(0, 0, {\r\n        title: this.title, \r\n        dataTime: `${date.getHours()}:${date.getMinutes()}`,\r\n        lastMessage: 'Нет сообщений', \r\n        id: Date.now()\r\n      }) \r\n      this.title = '' \r\n      this.saveDialog() \r\n    }, \r\n    saveDialog() {\r\n      localStorage.setItem('dialog', JSON.stringify(this.dialogs))\r\n    }, \r\n    getDialog() { \r\n      let dialog = JSON.parse(localStorage.getItem('dialog')) \r\n      return dialog != undefined ? dialog : [] \r\n    }\r\n  }, \r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.dialogs {\r\n  margin-top: 10px;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.dialog {\r\n  margin-top: 5px;\r\n  border-radius: 5px;\r\n  padding: 10px 15px;\r\n\r\n  .title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: end;\r\n\r\n    h3 {\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    time {\r\n      font-size: 12px;\r\n      color: #999;\r\n    }\r\n  }\r\n\r\n  .last-message {\r\n    margin-top: 5px;\r\n\r\n    p {\r\n      color: #717579;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: #2c2c2c;\r\n  }\r\n}\r\n\r\n.footer {\r\n  height: 100px;\r\n\r\n  .form {\r\n    .new-dialog {\r\n      width: 100%;\r\n    }\r\n\r\n    button {\r\n      width: 100%;\r\n      padding: 10px;\r\n      border: 0;\r\n      border-radius: 5px;\r\n      font-size: 16px;\r\n      color: #fff;\r\n      background: #2c2c2c;\r\n      outline: none;\r\n      cursor: pointer;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DialogsView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DialogsView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DialogsView.vue?vue&type=template&id=0970b7c4&scoped=true&\"\nimport script from \"./DialogsView.vue?vue&type=script&lang=js&\"\nexport * from \"./DialogsView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DialogsView.vue?vue&type=style&index=0&id=0970b7c4&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0970b7c4\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","inp","expression","attrs","domProps","on","$event","target","composing","_l","sortedDialogs","dialog","key","id","_v","_s","title","dataTime","lastMessage","addDialog","staticRenderFns","props","data","dialogs","computed","watch","created","mounted","methods","saveDialog","localStorage","getDialog","component"],"sourceRoot":""}